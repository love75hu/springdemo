server:
  #统一前缀
  servlet:
    context-path: /mediinfo-springdemo
  port: 8000
  ssl:
    protocol: TLS
    key-store: classpath:keystore.p12
    key-store-password: 123456
  #1、 一定不要使用kill -9 操作，使用kill -2 来关闭容器。这样才会触发java内部ShutdownHook操作，kill -9不会触发ShutdownHook。
  #2、可以使用端点监控 POST 请求 /actuator/shutdown 来执行优雅关机。
  shutdown: graceful #开启优雅停机
java:
  starter:
    message: 第一个自定义starter
    enabled: true
javastack:
  name: java参数绑定实例
  user:
    - tansir
    - zhangsan
  params:
    tel: 17600159370
    address: 杭州余杭区
  security:
    key: ${random.uuid}
    code: ${random.long(0,100)}
member:
  name: tom
  sex: 1
  age: 32
  birthday: 2000-12-12 12:44:55
#swagger doc link: https://springdoc.org/index.html#properties
springdoc:
  openapi:
    Info:
      title: 文档标题
      description: swagger描述信息
      version: 1.0.0
      license:
        name: Apache 2.0
        url: http://springdoc.org
    externalDocs:
      description: SpringShop Wiki Documentation
      url: https://springshop.wiki.github.org/docs
  swagger-ui:
    enabled: true
#mybatis配置
mybatis:
  mapper-locations: classpath:mybatis/**/*Mapper.xml # 配置mapper的扫描，找到所有的mapper.xml映射文件
  type-aliases-package: cn.mediinfo.springdemo.model #指定数据库实体类的全包路径，方便在SQL文件中使用实体类时不用写包名
  configuration:
    cache-enabled: true  #使全局的映射器启用或禁用缓存
    use-generated-keys: true #允许JDBC 支持自动生成主键
    default-executor-type: simple #配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新
    #map-underscore-to-camel-case: true #使用驼峰命名法转换字段
    log-impl: org.apache.ibatis.logging.log4j2.Log4j2Impl #指定 MyBatis 所用日志的具体实现
spring:
  task:
    #任务调度线程池
    scheduling:
      pool:
        size: 3 #线程数，默认1
    #任务执行线程池参数配置
    execution:
      pool:
        queue-capacity: 9999999 #队列大小，默认是Integer最大值
        core-size: 8 #核心线程数，默认8
        max-size: 9999999 #最大线程数，默认是Integer最大值
        allow-core-thread-timeout: true #是否允许核心线程超时，默认true
        keep-alive: 60s #线程保活时间，默认60s
  jdbc: #自定义jdbc
    template:
      fetch-size: -1
      max-rows: -1
      query-timeout: 30s
  data:
    redis: #redis
      password: 123456
      database: 0
      host: 192.168.50.93
      port: 31505
  session: #session 会话
    timeout: 30s #默认30分钟
  lifecycle:
    timeout-per-shutdown-phase: 30s
  #激活的profile
  profiles:
    default: dev
    active: dev1,test
    #include: dev，test
  #数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver #可以不用指定，主流数据库都可以进行自动推断
    type: com.alibaba.druid.pool.DruidDataSource #手动指定连接池
    url: jdbc:mysql://172.19.125.100:3306/demo
    username: root
    password: admin123
  #jpa配置
  jpa:
    properties:
      hibernate:
        #根据类型可以生成特定的sql,https://docs.jboss.org/hibernate/orm/6.1/javadocs/org/hibernate/dialect/package-summary.html
        dialect: org.hibernate.dialect.MySQL8Dialect
        show-sql: true #输出SQL日志语句
        hbm2ddl:
          auto: update #update更新模式，
  #日志
  logging:
    level:
      sql: debug
      root: debug
      #打印sql参数
      org.hibernate.SQL: debug
      org.springframework: debug
      org.hibernate.type.descriptor.sql.BasicBinder: trace
      org.hibernate.type.descriptor.sql.BasicExtractor: trace
  #thymeleaf模版引擎配置
  thymeleaf:
    enabled: true
    cache: true
    prefix: classpath:/templates/
    suffix: .html
  sql:
    init:
      mode: always #数据库初始化模式 EMBEEDED（默认，只对嵌入式数据库执行初始化） 外部数据库初始化改为 always
      continue-on-error: true #初始化错误是否继续启动
      #schema-locations:
      #  - classpath:init.sql #需要执行初始化的DDL脚本（建表）
      data-locations:
      - classpath:Sql/insert.sql #需要执行初始化的DML脚本（插入数据）

#多文档示例
---
spring:
  config:
    activate:
      on-profile: dev1
---
spring:
  config:
    activate:
      on-profile: dev2
---
spring:
  profiles:
    #default: dev
    active: dev,pro #//可以通过命令行参数替换，默认是所有
    include: #//不会被替换，默认是空
        #- dev
        #- main
    group:
      dev:
        - dev1
        - dev2
